
test kod sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000520  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004cc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000520  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000550  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00000590  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000939  00000000  00000000  000005f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007e4  00000000  00000000  00000f29  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000381  00000000  00000000  0000170d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a0  00000000  00000000  00001a90  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000043b  00000000  00000000  00001b30  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000013a  00000000  00000000  00001f6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  000020a5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a0 30       	cpi	r26, 0x00	; 0
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 64 02 	jmp	0x4c8	; 0x4c8 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:
	#include "header.h"

	int main(void)
	{
		Setup();
  90:	0e 94 8a 00 	call	0x114	; 0x114 <Setup>
		//float f = 37.7777777;
		while (true) //Skapar en while sats so ska exekverar tills att programmet stängs av.
		{
			PWM(); //I while satsen så anropas PWM funktionen.
  94:	0e 94 8f 00 	call	0x11e	; 0x11e <PWM>
  98:	fd cf       	rjmp	.-6      	; 0x94 <main+0x4>

0000009a <ADC_read>:
	return;
}

static uint32_t ADC_read()
{
	ADMUX = ((1 << REFS0) | POT);
  9a:	81 e4       	ldi	r24, 0x41	; 65
  9c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA = ((1 << ADEN) | (1 << ADSC) | (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2));
  a0:	87 ec       	ldi	r24, 0xC7	; 199
  a2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
	while ((ADCSRA & (1 << ADIF)) == 0) ;
  a6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  aa:	84 ff       	sbrs	r24, 4
  ac:	fc cf       	rjmp	.-8      	; 0xa6 <ADC_read+0xc>
	ADCSRA = (1 << ADIF);
  ae:	80 e1       	ldi	r24, 0x10	; 16
  b0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
	return ADC;
  b4:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  b8:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	90 e0       	ldi	r25, 0x00	; 0
}
  c0:	08 95       	ret

000000c2 <init_ADC>:
	return;
}

static void init_ADC()
{
	ADMUX = (1 << REFS0);
  c2:	80 e4       	ldi	r24, 0x40	; 64
  c4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA = ((1 << ADEN) | (1 << ADSC) | (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2));
  c8:	87 ec       	ldi	r24, 0xC7	; 199
  ca:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
	while ((ADCSRA & (1 << ADIF)) == 0) ;
  ce:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  d2:	84 ff       	sbrs	r24, 4
  d4:	fc cf       	rjmp	.-8      	; 0xce <init_ADC+0xc>
	ADCSRA = (1 << ADIF);
  d6:	80 e1       	ldi	r24, 0x10	; 16
  d8:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  dc:	08 95       	ret

000000de <delay>:
	ADCSRA = (1 << ADIF);
	return ADC;
}

static void delay(const uint32_t delay_time)
{
  de:	0f 93       	push	r16
  e0:	1f 93       	push	r17
  e2:	8b 01       	movw	r16, r22
  e4:	9c 01       	movw	r18, r24
	for (int i = 0; i < delay_time; i++)
  e6:	80 e0       	ldi	r24, 0x00	; 0
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	07 c0       	rjmp	.+14     	; 0xfa <delay+0x1c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ec:	e7 e8       	ldi	r30, 0x87	; 135
  ee:	f3 e1       	ldi	r31, 0x13	; 19
  f0:	31 97       	sbiw	r30, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <delay+0x12>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <delay+0x18>
  f6:	00 00       	nop
  f8:	01 96       	adiw	r24, 0x01	; 1
  fa:	ac 01       	movw	r20, r24
  fc:	09 2e       	mov	r0, r25
  fe:	00 0c       	add	r0, r0
 100:	66 0b       	sbc	r22, r22
 102:	77 0b       	sbc	r23, r23
 104:	40 17       	cp	r20, r16
 106:	51 07       	cpc	r21, r17
 108:	62 07       	cpc	r22, r18
 10a:	73 07       	cpc	r23, r19
 10c:	78 f3       	brcs	.-34     	; 0xec <delay+0xe>
	_delay_ms(1);
	return;
}
 10e:	1f 91       	pop	r17
 110:	0f 91       	pop	r16
 112:	08 95       	ret

00000114 <Setup>:
static void delay(const uint32_t delay_time);
static void init_ADC();

void Setup()
{
	DDRD = (1 << SERVO);
 114:	80 e4       	ldi	r24, 0x40	; 64
 116:	8a b9       	out	0x0a, r24	; 10
	init_ADC();
 118:	0e 94 61 00 	call	0xc2	; 0xc2 <init_ADC>
 11c:	08 95       	ret

0000011e <PWM>:
}

void PWM()
{
 11e:	cf 93       	push	r28
 120:	df 93       	push	r29
	const uint16_t speed = ADC_read(POT);
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	0e 94 4d 00 	call	0x9a	; 0x9a <ADC_read>
	const float duty_cycle = (float)speed / (ADC_MAX); // *5 kan behövas korrigeras, även vid test av servo
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__floatunsisf>
 132:	20 e0       	ldi	r18, 0x00	; 0
 134:	30 e0       	ldi	r19, 0x00	; 0
 136:	40 e8       	ldi	r20, 0x80	; 128
 138:	5a e3       	ldi	r21, 0x3A	; 58
 13a:	0e 94 f7 01 	call	0x3ee	; 0x3ee <__mulsf3>
	const uint8_t on_time = (uint8_t )(duty_cycle * PERIOD);
 13e:	20 e0       	ldi	r18, 0x00	; 0
 140:	30 e0       	ldi	r19, 0x00	; 0
 142:	40 e2       	ldi	r20, 0x20	; 32
 144:	51 e4       	ldi	r21, 0x41	; 65
 146:	0e 94 f7 01 	call	0x3ee	; 0x3ee <__mulsf3>
 14a:	0e 94 3a 01 	call	0x274	; 0x274 <__fixunssfsi>
 14e:	c6 2f       	mov	r28, r22
	const uint8_t off_time = PERIOD - on_time;
 150:	70 e0       	ldi	r23, 0x00	; 0
 152:	80 e0       	ldi	r24, 0x00	; 0
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <__floatsisf>
 15a:	9b 01       	movw	r18, r22
 15c:	ac 01       	movw	r20, r24
 15e:	60 e0       	ldi	r22, 0x00	; 0
 160:	70 e0       	ldi	r23, 0x00	; 0
 162:	80 e2       	ldi	r24, 0x20	; 32
 164:	91 e4       	ldi	r25, 0x41	; 65
 166:	0e 94 cd 00 	call	0x19a	; 0x19a <__subsf3>
 16a:	0e 94 3a 01 	call	0x274	; 0x274 <__fixunssfsi>
 16e:	d6 2f       	mov	r29, r22
	
	SERVO_ON;
 170:	8b b1       	in	r24, 0x0b	; 11
 172:	80 64       	ori	r24, 0x40	; 64
 174:	8b b9       	out	0x0b, r24	; 11
	delay(on_time);
 176:	6c 2f       	mov	r22, r28
 178:	70 e0       	ldi	r23, 0x00	; 0
 17a:	80 e0       	ldi	r24, 0x00	; 0
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	0e 94 6f 00 	call	0xde	; 0xde <delay>
	SERVO_OFF;
 182:	8b b1       	in	r24, 0x0b	; 11
 184:	8f 7b       	andi	r24, 0xBF	; 191
 186:	8b b9       	out	0x0b, r24	; 11
	delay(off_time);
 188:	6d 2f       	mov	r22, r29
 18a:	70 e0       	ldi	r23, 0x00	; 0
 18c:	80 e0       	ldi	r24, 0x00	; 0
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	0e 94 6f 00 	call	0xde	; 0xde <delay>
	return;
}
 194:	df 91       	pop	r29
 196:	cf 91       	pop	r28
 198:	08 95       	ret

0000019a <__subsf3>:
 19a:	50 58       	subi	r21, 0x80	; 128

0000019c <__addsf3>:
 19c:	bb 27       	eor	r27, r27
 19e:	aa 27       	eor	r26, r26
 1a0:	0e 94 e5 00 	call	0x1ca	; 0x1ca <__addsf3x>
 1a4:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__fp_round>
 1a8:	0e 94 af 01 	call	0x35e	; 0x35e <__fp_pscA>
 1ac:	38 f0       	brcs	.+14     	; 0x1bc <__addsf3+0x20>
 1ae:	0e 94 b6 01 	call	0x36c	; 0x36c <__fp_pscB>
 1b2:	20 f0       	brcs	.+8      	; 0x1bc <__addsf3+0x20>
 1b4:	39 f4       	brne	.+14     	; 0x1c4 <__addsf3+0x28>
 1b6:	9f 3f       	cpi	r25, 0xFF	; 255
 1b8:	19 f4       	brne	.+6      	; 0x1c0 <__addsf3+0x24>
 1ba:	26 f4       	brtc	.+8      	; 0x1c4 <__addsf3+0x28>
 1bc:	0c 94 ac 01 	jmp	0x358	; 0x358 <__fp_nan>
 1c0:	0e f4       	brtc	.+2      	; 0x1c4 <__addsf3+0x28>
 1c2:	e0 95       	com	r30
 1c4:	e7 fb       	bst	r30, 7
 1c6:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__fp_inf>

000001ca <__addsf3x>:
 1ca:	e9 2f       	mov	r30, r25
 1cc:	0e 94 ce 01 	call	0x39c	; 0x39c <__fp_split3>
 1d0:	58 f3       	brcs	.-42     	; 0x1a8 <__addsf3+0xc>
 1d2:	ba 17       	cp	r27, r26
 1d4:	62 07       	cpc	r22, r18
 1d6:	73 07       	cpc	r23, r19
 1d8:	84 07       	cpc	r24, r20
 1da:	95 07       	cpc	r25, r21
 1dc:	20 f0       	brcs	.+8      	; 0x1e6 <__addsf3x+0x1c>
 1de:	79 f4       	brne	.+30     	; 0x1fe <__addsf3x+0x34>
 1e0:	a6 f5       	brtc	.+104    	; 0x24a <__addsf3x+0x80>
 1e2:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__fp_zero>
 1e6:	0e f4       	brtc	.+2      	; 0x1ea <__addsf3x+0x20>
 1e8:	e0 95       	com	r30
 1ea:	0b 2e       	mov	r0, r27
 1ec:	ba 2f       	mov	r27, r26
 1ee:	a0 2d       	mov	r26, r0
 1f0:	0b 01       	movw	r0, r22
 1f2:	b9 01       	movw	r22, r18
 1f4:	90 01       	movw	r18, r0
 1f6:	0c 01       	movw	r0, r24
 1f8:	ca 01       	movw	r24, r20
 1fa:	a0 01       	movw	r20, r0
 1fc:	11 24       	eor	r1, r1
 1fe:	ff 27       	eor	r31, r31
 200:	59 1b       	sub	r21, r25
 202:	99 f0       	breq	.+38     	; 0x22a <__addsf3x+0x60>
 204:	59 3f       	cpi	r21, 0xF9	; 249
 206:	50 f4       	brcc	.+20     	; 0x21c <__addsf3x+0x52>
 208:	50 3e       	cpi	r21, 0xE0	; 224
 20a:	68 f1       	brcs	.+90     	; 0x266 <__addsf3x+0x9c>
 20c:	1a 16       	cp	r1, r26
 20e:	f0 40       	sbci	r31, 0x00	; 0
 210:	a2 2f       	mov	r26, r18
 212:	23 2f       	mov	r18, r19
 214:	34 2f       	mov	r19, r20
 216:	44 27       	eor	r20, r20
 218:	58 5f       	subi	r21, 0xF8	; 248
 21a:	f3 cf       	rjmp	.-26     	; 0x202 <__addsf3x+0x38>
 21c:	46 95       	lsr	r20
 21e:	37 95       	ror	r19
 220:	27 95       	ror	r18
 222:	a7 95       	ror	r26
 224:	f0 40       	sbci	r31, 0x00	; 0
 226:	53 95       	inc	r21
 228:	c9 f7       	brne	.-14     	; 0x21c <__addsf3x+0x52>
 22a:	7e f4       	brtc	.+30     	; 0x24a <__addsf3x+0x80>
 22c:	1f 16       	cp	r1, r31
 22e:	ba 0b       	sbc	r27, r26
 230:	62 0b       	sbc	r22, r18
 232:	73 0b       	sbc	r23, r19
 234:	84 0b       	sbc	r24, r20
 236:	ba f0       	brmi	.+46     	; 0x266 <__addsf3x+0x9c>
 238:	91 50       	subi	r25, 0x01	; 1
 23a:	a1 f0       	breq	.+40     	; 0x264 <__addsf3x+0x9a>
 23c:	ff 0f       	add	r31, r31
 23e:	bb 1f       	adc	r27, r27
 240:	66 1f       	adc	r22, r22
 242:	77 1f       	adc	r23, r23
 244:	88 1f       	adc	r24, r24
 246:	c2 f7       	brpl	.-16     	; 0x238 <__addsf3x+0x6e>
 248:	0e c0       	rjmp	.+28     	; 0x266 <__addsf3x+0x9c>
 24a:	ba 0f       	add	r27, r26
 24c:	62 1f       	adc	r22, r18
 24e:	73 1f       	adc	r23, r19
 250:	84 1f       	adc	r24, r20
 252:	48 f4       	brcc	.+18     	; 0x266 <__addsf3x+0x9c>
 254:	87 95       	ror	r24
 256:	77 95       	ror	r23
 258:	67 95       	ror	r22
 25a:	b7 95       	ror	r27
 25c:	f7 95       	ror	r31
 25e:	9e 3f       	cpi	r25, 0xFE	; 254
 260:	08 f0       	brcs	.+2      	; 0x264 <__addsf3x+0x9a>
 262:	b0 cf       	rjmp	.-160    	; 0x1c4 <__addsf3+0x28>
 264:	93 95       	inc	r25
 266:	88 0f       	add	r24, r24
 268:	08 f0       	brcs	.+2      	; 0x26c <__addsf3x+0xa2>
 26a:	99 27       	eor	r25, r25
 26c:	ee 0f       	add	r30, r30
 26e:	97 95       	ror	r25
 270:	87 95       	ror	r24
 272:	08 95       	ret

00000274 <__fixunssfsi>:
 274:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__fp_splitA>
 278:	88 f0       	brcs	.+34     	; 0x29c <__fixunssfsi+0x28>
 27a:	9f 57       	subi	r25, 0x7F	; 127
 27c:	98 f0       	brcs	.+38     	; 0x2a4 <__fixunssfsi+0x30>
 27e:	b9 2f       	mov	r27, r25
 280:	99 27       	eor	r25, r25
 282:	b7 51       	subi	r27, 0x17	; 23
 284:	b0 f0       	brcs	.+44     	; 0x2b2 <__fixunssfsi+0x3e>
 286:	e1 f0       	breq	.+56     	; 0x2c0 <__fixunssfsi+0x4c>
 288:	66 0f       	add	r22, r22
 28a:	77 1f       	adc	r23, r23
 28c:	88 1f       	adc	r24, r24
 28e:	99 1f       	adc	r25, r25
 290:	1a f0       	brmi	.+6      	; 0x298 <__fixunssfsi+0x24>
 292:	ba 95       	dec	r27
 294:	c9 f7       	brne	.-14     	; 0x288 <__fixunssfsi+0x14>
 296:	14 c0       	rjmp	.+40     	; 0x2c0 <__fixunssfsi+0x4c>
 298:	b1 30       	cpi	r27, 0x01	; 1
 29a:	91 f0       	breq	.+36     	; 0x2c0 <__fixunssfsi+0x4c>
 29c:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <__fp_zero>
 2a0:	b1 e0       	ldi	r27, 0x01	; 1
 2a2:	08 95       	ret
 2a4:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__fp_zero>
 2a8:	67 2f       	mov	r22, r23
 2aa:	78 2f       	mov	r23, r24
 2ac:	88 27       	eor	r24, r24
 2ae:	b8 5f       	subi	r27, 0xF8	; 248
 2b0:	39 f0       	breq	.+14     	; 0x2c0 <__fixunssfsi+0x4c>
 2b2:	b9 3f       	cpi	r27, 0xF9	; 249
 2b4:	cc f3       	brlt	.-14     	; 0x2a8 <__fixunssfsi+0x34>
 2b6:	86 95       	lsr	r24
 2b8:	77 95       	ror	r23
 2ba:	67 95       	ror	r22
 2bc:	b3 95       	inc	r27
 2be:	d9 f7       	brne	.-10     	; 0x2b6 <__fixunssfsi+0x42>
 2c0:	3e f4       	brtc	.+14     	; 0x2d0 <__fixunssfsi+0x5c>
 2c2:	90 95       	com	r25
 2c4:	80 95       	com	r24
 2c6:	70 95       	com	r23
 2c8:	61 95       	neg	r22
 2ca:	7f 4f       	sbci	r23, 0xFF	; 255
 2cc:	8f 4f       	sbci	r24, 0xFF	; 255
 2ce:	9f 4f       	sbci	r25, 0xFF	; 255
 2d0:	08 95       	ret

000002d2 <__floatunsisf>:
 2d2:	e8 94       	clt
 2d4:	09 c0       	rjmp	.+18     	; 0x2e8 <__floatsisf+0x12>

000002d6 <__floatsisf>:
 2d6:	97 fb       	bst	r25, 7
 2d8:	3e f4       	brtc	.+14     	; 0x2e8 <__floatsisf+0x12>
 2da:	90 95       	com	r25
 2dc:	80 95       	com	r24
 2de:	70 95       	com	r23
 2e0:	61 95       	neg	r22
 2e2:	7f 4f       	sbci	r23, 0xFF	; 255
 2e4:	8f 4f       	sbci	r24, 0xFF	; 255
 2e6:	9f 4f       	sbci	r25, 0xFF	; 255
 2e8:	99 23       	and	r25, r25
 2ea:	a9 f0       	breq	.+42     	; 0x316 <__floatsisf+0x40>
 2ec:	f9 2f       	mov	r31, r25
 2ee:	96 e9       	ldi	r25, 0x96	; 150
 2f0:	bb 27       	eor	r27, r27
 2f2:	93 95       	inc	r25
 2f4:	f6 95       	lsr	r31
 2f6:	87 95       	ror	r24
 2f8:	77 95       	ror	r23
 2fa:	67 95       	ror	r22
 2fc:	b7 95       	ror	r27
 2fe:	f1 11       	cpse	r31, r1
 300:	f8 cf       	rjmp	.-16     	; 0x2f2 <__floatsisf+0x1c>
 302:	fa f4       	brpl	.+62     	; 0x342 <__floatsisf+0x6c>
 304:	bb 0f       	add	r27, r27
 306:	11 f4       	brne	.+4      	; 0x30c <__floatsisf+0x36>
 308:	60 ff       	sbrs	r22, 0
 30a:	1b c0       	rjmp	.+54     	; 0x342 <__floatsisf+0x6c>
 30c:	6f 5f       	subi	r22, 0xFF	; 255
 30e:	7f 4f       	sbci	r23, 0xFF	; 255
 310:	8f 4f       	sbci	r24, 0xFF	; 255
 312:	9f 4f       	sbci	r25, 0xFF	; 255
 314:	16 c0       	rjmp	.+44     	; 0x342 <__floatsisf+0x6c>
 316:	88 23       	and	r24, r24
 318:	11 f0       	breq	.+4      	; 0x31e <__floatsisf+0x48>
 31a:	96 e9       	ldi	r25, 0x96	; 150
 31c:	11 c0       	rjmp	.+34     	; 0x340 <__floatsisf+0x6a>
 31e:	77 23       	and	r23, r23
 320:	21 f0       	breq	.+8      	; 0x32a <__floatsisf+0x54>
 322:	9e e8       	ldi	r25, 0x8E	; 142
 324:	87 2f       	mov	r24, r23
 326:	76 2f       	mov	r23, r22
 328:	05 c0       	rjmp	.+10     	; 0x334 <__floatsisf+0x5e>
 32a:	66 23       	and	r22, r22
 32c:	71 f0       	breq	.+28     	; 0x34a <__floatsisf+0x74>
 32e:	96 e8       	ldi	r25, 0x86	; 134
 330:	86 2f       	mov	r24, r22
 332:	70 e0       	ldi	r23, 0x00	; 0
 334:	60 e0       	ldi	r22, 0x00	; 0
 336:	2a f0       	brmi	.+10     	; 0x342 <__floatsisf+0x6c>
 338:	9a 95       	dec	r25
 33a:	66 0f       	add	r22, r22
 33c:	77 1f       	adc	r23, r23
 33e:	88 1f       	adc	r24, r24
 340:	da f7       	brpl	.-10     	; 0x338 <__floatsisf+0x62>
 342:	88 0f       	add	r24, r24
 344:	96 95       	lsr	r25
 346:	87 95       	ror	r24
 348:	97 f9       	bld	r25, 7
 34a:	08 95       	ret

0000034c <__fp_inf>:
 34c:	97 f9       	bld	r25, 7
 34e:	9f 67       	ori	r25, 0x7F	; 127
 350:	80 e8       	ldi	r24, 0x80	; 128
 352:	70 e0       	ldi	r23, 0x00	; 0
 354:	60 e0       	ldi	r22, 0x00	; 0
 356:	08 95       	ret

00000358 <__fp_nan>:
 358:	9f ef       	ldi	r25, 0xFF	; 255
 35a:	80 ec       	ldi	r24, 0xC0	; 192
 35c:	08 95       	ret

0000035e <__fp_pscA>:
 35e:	00 24       	eor	r0, r0
 360:	0a 94       	dec	r0
 362:	16 16       	cp	r1, r22
 364:	17 06       	cpc	r1, r23
 366:	18 06       	cpc	r1, r24
 368:	09 06       	cpc	r0, r25
 36a:	08 95       	ret

0000036c <__fp_pscB>:
 36c:	00 24       	eor	r0, r0
 36e:	0a 94       	dec	r0
 370:	12 16       	cp	r1, r18
 372:	13 06       	cpc	r1, r19
 374:	14 06       	cpc	r1, r20
 376:	05 06       	cpc	r0, r21
 378:	08 95       	ret

0000037a <__fp_round>:
 37a:	09 2e       	mov	r0, r25
 37c:	03 94       	inc	r0
 37e:	00 0c       	add	r0, r0
 380:	11 f4       	brne	.+4      	; 0x386 <__fp_round+0xc>
 382:	88 23       	and	r24, r24
 384:	52 f0       	brmi	.+20     	; 0x39a <__fp_round+0x20>
 386:	bb 0f       	add	r27, r27
 388:	40 f4       	brcc	.+16     	; 0x39a <__fp_round+0x20>
 38a:	bf 2b       	or	r27, r31
 38c:	11 f4       	brne	.+4      	; 0x392 <__fp_round+0x18>
 38e:	60 ff       	sbrs	r22, 0
 390:	04 c0       	rjmp	.+8      	; 0x39a <__fp_round+0x20>
 392:	6f 5f       	subi	r22, 0xFF	; 255
 394:	7f 4f       	sbci	r23, 0xFF	; 255
 396:	8f 4f       	sbci	r24, 0xFF	; 255
 398:	9f 4f       	sbci	r25, 0xFF	; 255
 39a:	08 95       	ret

0000039c <__fp_split3>:
 39c:	57 fd       	sbrc	r21, 7
 39e:	90 58       	subi	r25, 0x80	; 128
 3a0:	44 0f       	add	r20, r20
 3a2:	55 1f       	adc	r21, r21
 3a4:	59 f0       	breq	.+22     	; 0x3bc <__fp_splitA+0x10>
 3a6:	5f 3f       	cpi	r21, 0xFF	; 255
 3a8:	71 f0       	breq	.+28     	; 0x3c6 <__fp_splitA+0x1a>
 3aa:	47 95       	ror	r20

000003ac <__fp_splitA>:
 3ac:	88 0f       	add	r24, r24
 3ae:	97 fb       	bst	r25, 7
 3b0:	99 1f       	adc	r25, r25
 3b2:	61 f0       	breq	.+24     	; 0x3cc <__fp_splitA+0x20>
 3b4:	9f 3f       	cpi	r25, 0xFF	; 255
 3b6:	79 f0       	breq	.+30     	; 0x3d6 <__fp_splitA+0x2a>
 3b8:	87 95       	ror	r24
 3ba:	08 95       	ret
 3bc:	12 16       	cp	r1, r18
 3be:	13 06       	cpc	r1, r19
 3c0:	14 06       	cpc	r1, r20
 3c2:	55 1f       	adc	r21, r21
 3c4:	f2 cf       	rjmp	.-28     	; 0x3aa <__fp_split3+0xe>
 3c6:	46 95       	lsr	r20
 3c8:	f1 df       	rcall	.-30     	; 0x3ac <__fp_splitA>
 3ca:	08 c0       	rjmp	.+16     	; 0x3dc <__fp_splitA+0x30>
 3cc:	16 16       	cp	r1, r22
 3ce:	17 06       	cpc	r1, r23
 3d0:	18 06       	cpc	r1, r24
 3d2:	99 1f       	adc	r25, r25
 3d4:	f1 cf       	rjmp	.-30     	; 0x3b8 <__fp_splitA+0xc>
 3d6:	86 95       	lsr	r24
 3d8:	71 05       	cpc	r23, r1
 3da:	61 05       	cpc	r22, r1
 3dc:	08 94       	sec
 3de:	08 95       	ret

000003e0 <__fp_zero>:
 3e0:	e8 94       	clt

000003e2 <__fp_szero>:
 3e2:	bb 27       	eor	r27, r27
 3e4:	66 27       	eor	r22, r22
 3e6:	77 27       	eor	r23, r23
 3e8:	cb 01       	movw	r24, r22
 3ea:	97 f9       	bld	r25, 7
 3ec:	08 95       	ret

000003ee <__mulsf3>:
 3ee:	0e 94 0a 02 	call	0x414	; 0x414 <__mulsf3x>
 3f2:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__fp_round>
 3f6:	0e 94 af 01 	call	0x35e	; 0x35e <__fp_pscA>
 3fa:	38 f0       	brcs	.+14     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3fc:	0e 94 b6 01 	call	0x36c	; 0x36c <__fp_pscB>
 400:	20 f0       	brcs	.+8      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 402:	95 23       	and	r25, r21
 404:	11 f0       	breq	.+4      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 406:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__fp_inf>
 40a:	0c 94 ac 01 	jmp	0x358	; 0x358 <__fp_nan>
 40e:	11 24       	eor	r1, r1
 410:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__fp_szero>

00000414 <__mulsf3x>:
 414:	0e 94 ce 01 	call	0x39c	; 0x39c <__fp_split3>
 418:	70 f3       	brcs	.-36     	; 0x3f6 <__mulsf3+0x8>

0000041a <__mulsf3_pse>:
 41a:	95 9f       	mul	r25, r21
 41c:	c1 f3       	breq	.-16     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 41e:	95 0f       	add	r25, r21
 420:	50 e0       	ldi	r21, 0x00	; 0
 422:	55 1f       	adc	r21, r21
 424:	62 9f       	mul	r22, r18
 426:	f0 01       	movw	r30, r0
 428:	72 9f       	mul	r23, r18
 42a:	bb 27       	eor	r27, r27
 42c:	f0 0d       	add	r31, r0
 42e:	b1 1d       	adc	r27, r1
 430:	63 9f       	mul	r22, r19
 432:	aa 27       	eor	r26, r26
 434:	f0 0d       	add	r31, r0
 436:	b1 1d       	adc	r27, r1
 438:	aa 1f       	adc	r26, r26
 43a:	64 9f       	mul	r22, r20
 43c:	66 27       	eor	r22, r22
 43e:	b0 0d       	add	r27, r0
 440:	a1 1d       	adc	r26, r1
 442:	66 1f       	adc	r22, r22
 444:	82 9f       	mul	r24, r18
 446:	22 27       	eor	r18, r18
 448:	b0 0d       	add	r27, r0
 44a:	a1 1d       	adc	r26, r1
 44c:	62 1f       	adc	r22, r18
 44e:	73 9f       	mul	r23, r19
 450:	b0 0d       	add	r27, r0
 452:	a1 1d       	adc	r26, r1
 454:	62 1f       	adc	r22, r18
 456:	83 9f       	mul	r24, r19
 458:	a0 0d       	add	r26, r0
 45a:	61 1d       	adc	r22, r1
 45c:	22 1f       	adc	r18, r18
 45e:	74 9f       	mul	r23, r20
 460:	33 27       	eor	r19, r19
 462:	a0 0d       	add	r26, r0
 464:	61 1d       	adc	r22, r1
 466:	23 1f       	adc	r18, r19
 468:	84 9f       	mul	r24, r20
 46a:	60 0d       	add	r22, r0
 46c:	21 1d       	adc	r18, r1
 46e:	82 2f       	mov	r24, r18
 470:	76 2f       	mov	r23, r22
 472:	6a 2f       	mov	r22, r26
 474:	11 24       	eor	r1, r1
 476:	9f 57       	subi	r25, 0x7F	; 127
 478:	50 40       	sbci	r21, 0x00	; 0
 47a:	9a f0       	brmi	.+38     	; 0x4a2 <__mulsf3_pse+0x88>
 47c:	f1 f0       	breq	.+60     	; 0x4ba <__mulsf3_pse+0xa0>
 47e:	88 23       	and	r24, r24
 480:	4a f0       	brmi	.+18     	; 0x494 <__mulsf3_pse+0x7a>
 482:	ee 0f       	add	r30, r30
 484:	ff 1f       	adc	r31, r31
 486:	bb 1f       	adc	r27, r27
 488:	66 1f       	adc	r22, r22
 48a:	77 1f       	adc	r23, r23
 48c:	88 1f       	adc	r24, r24
 48e:	91 50       	subi	r25, 0x01	; 1
 490:	50 40       	sbci	r21, 0x00	; 0
 492:	a9 f7       	brne	.-22     	; 0x47e <__mulsf3_pse+0x64>
 494:	9e 3f       	cpi	r25, 0xFE	; 254
 496:	51 05       	cpc	r21, r1
 498:	80 f0       	brcs	.+32     	; 0x4ba <__mulsf3_pse+0xa0>
 49a:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__fp_inf>
 49e:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__fp_szero>
 4a2:	5f 3f       	cpi	r21, 0xFF	; 255
 4a4:	e4 f3       	brlt	.-8      	; 0x49e <__mulsf3_pse+0x84>
 4a6:	98 3e       	cpi	r25, 0xE8	; 232
 4a8:	d4 f3       	brlt	.-12     	; 0x49e <__mulsf3_pse+0x84>
 4aa:	86 95       	lsr	r24
 4ac:	77 95       	ror	r23
 4ae:	67 95       	ror	r22
 4b0:	b7 95       	ror	r27
 4b2:	f7 95       	ror	r31
 4b4:	e7 95       	ror	r30
 4b6:	9f 5f       	subi	r25, 0xFF	; 255
 4b8:	c1 f7       	brne	.-16     	; 0x4aa <__mulsf3_pse+0x90>
 4ba:	fe 2b       	or	r31, r30
 4bc:	88 0f       	add	r24, r24
 4be:	91 1d       	adc	r25, r1
 4c0:	96 95       	lsr	r25
 4c2:	87 95       	ror	r24
 4c4:	97 f9       	bld	r25, 7
 4c6:	08 95       	ret

000004c8 <_exit>:
 4c8:	f8 94       	cli

000004ca <__stop_program>:
 4ca:	ff cf       	rjmp	.-2      	; 0x4ca <__stop_program>
